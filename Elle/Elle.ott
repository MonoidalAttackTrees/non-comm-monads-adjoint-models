% Input variables.
metavar vars ,  n , a, x , y, z , w , m , o ::=  
indexvar ivar, i , k , j , l ::=
metavar const, b ::= 

grammar


% Lambek category:
A, B, C :: 'lform_' ::=
  | Base    ::   :: Base          
  {{tex \mathsf{B} }}
  | UnitS    ::   :: UnitS
  {{tex \mathsf{UnitS} }}
  | A (>) B ::   :: Tensor        
  | A -> B  ::   :: RFun          
  | A <- B  ::   :: LFun          
  | ( A )   :: M :: Parens 
  | h( A )  :: M :: HiddenParens 
  {{ tex [[A]] }}
  | F X     ::   :: LeftAdj
  {{tex \mathsf{F}[[X]] }}

% Symmetric monoidal closed category:
X, Y, Z :: 'sform_' ::=
  | Base    ::   :: Base          
  {{tex \mathsf{B} }}
  | UnitT    ::   :: UnitT
  {{tex \mathsf{UnitT} }}
  | X (x) Y ::   :: Tensor        
  | X -o Y  ::   :: Fun          
  | ( X )   :: M :: Parens 
  | h( X )  :: M :: HiddenParens 
  {{ tex [[X]] }}
  | Gf A     ::   :: RightAdj
  {{tex \mathsf{G}[[A]] }}

T :: 'type_' ::=
  | A :: :: LType
  | X :: :: SType

p :: 'pattern_' ::=
  | - :: :: hole
  {{tex \star }}
  | x :: :: var
  | trivT :: :: trivT
  {{tex \mathsf{trivT} }}
  | trivS :: :: trivS
  {{tex \mathsf{trivS} }}
  | p (x) p' :: :: ten
  | p (>) p' :: :: lambek
  | F p :: :: LeftAdj
  {{tex \mathsf{F}\,[[p]] }}
  | Gf p     ::   :: RightAdj
  {{tex \mathsf{G}\,[[p]] }}

s :: 'term_' ::=
  | x :: :: Var
  | b :: :: Const
  | trivS :: :: UnitS
  {{tex \mathsf{trivS} }}
  | let s1 : T be p in s2 :: :: let1
  {{tex \mathsf{let}\,[[s1]] : [[T]]\,\mathsf{be}\,[[p]]\,\mathsf{in}\,[[s2]] }}
  | let t : T be p in s :: :: let2
  {{tex \mathsf{let}\,[[t]] : [[T]]\,\mathsf{be}\,[[p]]\,\mathsf{in}\,[[s]] }}
  | s1 (>) s2 :: :: Tensor
  | \l x : A . s :: :: LFun
  {{tex \lambda_l [[x]] : [[A]].[[s]] }}
  | \r x : A . s :: :: RFun
  {{tex \lambda_r [[x]] : [[A]].[[s]] }}
  | appl s1 s2   :: :: Appl
  {{tex \mathsf{app}_l\,[[s1]]\,[[s2]] }}
  | appr s1 s2   :: :: Appr
  {{tex \mathsf{app}_r\,[[s1]]\,[[s2]] }}
  | ex s1 , s2 with x1 , x2 in s3 :: :: Ex
  {{tex \mathsf{ex}\,[[s1]],[[s2]]\,\mathsf{with}\,[[x1]],[[x2]]\,\mathsf{in}\,[[s3]] }}
  | contrR x as s1 , s2 in s3 :: :: ContrR
  {{tex \mathsf{contrR}\,[[x]]\,\mathsf{as}\,[[s1]],[[s2]]\,\mathsf{in}\,[[s3]] }}
  | contrL x as s1 , s2 in s3 :: :: ContrL
  {{tex \mathsf{contrL}\,[[x]]\,\mathsf{as}\,[[s1]],[[s2]]\,\mathsf{in}\,[[s3]] }}
  | weak x in s :: :: Weak
  {{tex \mathsf{weak}\,[[x]]\,\mathsf{in}\,[[s]] }}
  | [ s1 / x ] s2 :: M :: Subst
  | [ t / x ] s   :: M :: Subst2
  | ( s )         :: S :: parens
  | h( s )        :: M :: hparen
  {{tex [[s]] }}
  | F t           ::   :: LeftAdj
  {{tex \mathsf{F}[[t]] }}

t :: 'sterm_' ::=
  | x :: :: Var
  | b :: :: Const
  | trivT :: :: UnitT
  {{tex \mathsf{trivT} }}
  | let t1 : X be p in t2 :: :: let
  {{tex \mathsf{let}\,[[t1]] : [[X]]\,\mathsf{be}\,[[p]]\,\mathsf{in}\,[[t2]] }}
  | t1 (x) t2 :: :: Tensor
  | \ x : X . t :: :: Fun
  {{tex \lambda [[x]] : [[X]].[[t]] }}  
  | app t1 t2   :: :: App
  {{tex \mathsf{app}\,[[t1]]\,[[t2]] }}  
  | ex t1 , t2 with x1 , x2 in t3 :: :: Ex
  {{tex \mathsf{ex}\,[[t1]],[[t2]]\,\mathsf{with}\,[[x1]],[[x2]]\,\mathsf{in}\,[[t3]] }}
  | contrR x as t1 , t2 in t3 :: :: ContrR
  {{tex \mathsf{contrR}\,[[x]]\,\mathsf{as}\,[[t1]],[[t2]]\,\mathsf{in}\,[[t3]] }}
  | contrL x as t1 , t2 in t3 :: :: ContrL
  {{tex \mathsf{contrR}\,[[x]]\,\mathsf{as}\,[[t1]],[[t2]]\,\mathsf{in}\,[[t3]] }}
  | weak x in t :: :: Weak
  {{tex \mathsf{weak}\,[[x]]\,\mathsf{in}\,[[t]] }}
  | [ t1 / x ] t2 :: M :: Subst
  | ( t )         :: S :: parens
  | h( t )        :: M :: hparen
  | Gf s           ::   :: RightAdj
  {{tex \mathsf{G}[[s]] }}

I {{tex \Phi}}, P {{tex \Psi}} :: 'CCtx_' ::=
  | .       ::   :: Empty
  {{tex \cdot }}
  | I1 , I2 ::   :: Ext
  | x : X   ::   :: ElC
  | X       ::   :: ElCty
  | ( I )   :: S :: Paren

G {{tex \Gamma}}, D {{tex \Delta}} :: 'Ctx_' ::=
  | .       ::   :: Empty
  {{tex \cdot }}
  | x : A   ::   :: El
  | A       ::   :: Elty
  | I       ::   :: CCtx
  | G1 , G2 ::   :: Ext
  | ( G )   :: S :: Paren

formula :: 'formula_' ::=
  | judgement            ::   :: judgement
  | formula1 && formula2 :: M :: quad
  {{tex [[formula1]] \quad [[formula2]] }}
  | formula1 ... formulai :: M :: vec
  | ( formula )          :: S :: parens
  {{tex [[formula]] }}
  | x nin FV ( s ) :: :: FV
  {{tex [[x]] \not\in \mathsf{FV}([[s]]) }}
  | x nin1 | G , D , P | :: :: NiNCtx1
  {{tex [[x]] \not\in | [[G]], [[D]], [[P]] | }}
  | x nin2 | G , D |     :: :: NiNCtx2
  {{tex [[x]] \not\in | [[G]], [[D]] | }}
  | x nin3 | I , P |     :: :: NiNCtx3
  {{tex [[x]] \not\in | [[I]], [[P]] | }}

terminals :: 'terminals_' ::=
  | UnitT :: :: UnitT
  {{tex \mathsf{UnitT} }}
  | UnitS :: :: UnitS
  {{tex \mathsf{UnitS} }}
  | (x)  :: :: Tensor
  {{tex \otimes }}
  | (>)  :: :: Lambek
  {{tex \triangleright }}
  | (e)  :: :: ETensor
  {{tex \circop{e} }}  
  | (w)  :: :: WTensor
  {{tex \circop{w} }}  
  | (c)  :: :: CTensor
  {{tex \circop{c} }}
  | ->   :: :: LFun
  {{tex \rightharpoonup }}
  | <-   :: :: RFun
  {{tex \leftharpoonup }}
  | -o   :: :: Limp
  {{tex \multimap }}
  | |-c   :: :: VdashC
  {{tex \vdash_\mathcal{C} }}
  | |-l   :: :: VdashL
  {{tex \vdash_\mathcal{L} }}
  | ~>   :: :: To
  {{tex \leadsto }}
 
defns
  Jtype :: '' ::=

defn
  I |-c t : X :: :: tty :: 'T_'
by 

  --------------- :: ax
  x : X |-c x : X

  P |-c t : X
  ------------------------------------------------ :: unitL
  x : UnitT, P |-c let x : UnitT be trivT in t : X

  ------------------- :: unitR
  . |-c trivT : UnitT

  I, x : X, y : Y, P |-c t : Z
  ------------------------------------------------- :: beta
  I, z : Y, w : X, P |-c ex w, z with x, y in t : Z

  I1, x : X, I2, y : X, I3 |-c t : Y
  ----------------------------------------------- :: contrR
  I1, I2, z : X, I3 |-c contrR z as x, y in t : Y

  I1, x : X, I2, y : X, I3 |-c t : Y
  ----------------------------------------------- :: contrL
  I1, z : X, I2, I3 |-c contrR z as x, y in t : Y

  I, P |-c t : Y && x nin2 |I, P|
  ------------------------------- :: weak
  I, x : X, P |-c weak x in t : Y

  I |-c t1 : X && P1, x : X, P2 |-c t2 : Y
  --------------------------------------- :: cut
  P1, I, P2 |-c [t1/x]t2 : Y

  I, x : X, y : Y, P |-c t : Z
  --------------------------------------------------------- :: tenL
  I, z : X (x) Y, P |-c let z : X (x) Y be x (x) y in t : Z

  I |-c t1 : X && P |-c t2 : Y
  ---------------------------- :: tenR
  I, P |-c t1 (x) t2 : X (x) Y  

  I, x : X |-c t : Y
  ------------------------- :: impR
  I |-c \ x:X.t : X -o Y

  I |-c t1 : X && P1, x : Y, P2 |-c t2 : Z
  -------------------------------------------- :: impL
  P1, y : X -o Y, I, P2 |-c [app y t1/x]t2 : Z

  I |-l s : A
  ----------------- :: Gr
  I |-c Gf s : Gf A

defn
  G |-l s : A :: :: sty :: 'S_'
by

  --------------- :: ax
  x : A |-l x : A

  D |-l s : A
  --------------------------------------------------- :: unitL1
  x : UnitT, D |-l let x : UnitT be trivT in s : A

  D |-l s : A
  --------------------------------------------------- :: unitL2
  x : UnitS, D |-l let x : UnitS be trivS in s : A

  ------------------- :: unitR
  . |-l trivS : UnitS

  G, x : X, y : Y, D |-l s : A
  ------------------------------------------------- :: beta
  G, z : Y, w : X, D |-l ex w, z with x, y in s : A

  G1, x : X, G2, y : X, G3 |-l s : A
  ----------------------------------------------- :: contrR
  G1, G2, y : X, G3 |-l contrR z as x, y in s : A

  G1, x : X, G2, y : X, G3 |-l s : A
  ----------------------------------------------- :: contrL
  G1, y : X, G2, G3 |-l contrR z as x, y in s : A

  G, D |-l s : A && x nin2 |G, D|
  ------------------------------- :: weak
  G, x : X, D |-l weak x in s : B

  I |-c t : X && G1, x : X, G2 |-l s : A
  -------------------------------------- :: cut1
  G1, I, G1 |-l [t/x]s : A

  G |-l s1 : A && D1, x : A, D2 |-l s2 : B
  ---------------------------------------- :: cut2
  D1, G, D2 |-l [s1/x]s2 : B

  G, x : X, y : Y, D |-l s : A
  --------------------------------------------------------- :: tenL1
  G, z : X (x) Y, D |-l let z : X (x) Y be x (x) y in s : A

  G, x : A, y : B, D |-l s : C
  --------------------------------------------------------- :: tenL2
  G, z : A (>) B, D |-l let z : A (>) B be x (>) y in s : C

  G |-l s1 : A && D |-l s2 : B
  ---------------------------- :: tenR
  G, D |-l s1 (>) s2 : A (>) B

  I |-c t : X && G, x : Y, D |-l s : A
  ---------------------------------------- :: impL
  G, y : X -o Y, I, D |-l [app y t/x]s : A

  G |-l s1 : A && D, x : B |-l s2 : C
  ---------------------------------------- :: imprL
  D, y : A -> B, G |-l [appr y s1/x]s2 : C

  G |-l s1 : A && x : B, D |-l s2 : C
  ---------------------------------------- :: implL
  G, y : B <- A, D |-l [appl y s1/x]s2 : C

  G, x : A |-l s : B
  ----------------------- :: imprR
  G |-l \r x:A.s : A -> B

  x : A, G |-l s : B
  ------------------------ :: implR
  G |-l \l x:A.s : B <- A

  I |-c t : X
  --------------- :: Fr
  I |-l F t : F X

  G, x : X, D |-l s : A
  --------------------------------------------- :: Fl
  G, y : F X, D |-l let y : F X be F x in s : A

  G, x : A, D |-l s : B
  ------------------------------------------------ :: Gl
  G, y : Gf A, D |-l let y : Gf A be Gf x in s : B

defns
  Jty :: '' ::=

defn
  I |-c X :: :: tse :: 'Tty_'
by

  ------- :: ax
  X |-c X 

  I |-c X
  -------------- :: unitL
  UnitT, I |-c X

  ----------- :: unitR
  . |-c UnitT

  I, X, Y, P |-c Z
  ---------------- :: beta
  I, Y, X, P |-c Z

  I |-c X && P1, X, P2 |-c Y
  -------------------------- :: cut
  P1, I, P2 |-c Y

  I, X, Y, P |-c Z
  ------------------- :: tenL
  I, X (x) Y, P |-c Z

  I |-c X && P |-c Y
  ------------------ :: tenR
  I, P |-c X (x) Y

  I, X |-c Y
  ------------ :: impR
  I |-c X -o Y

  I |-c X && P1, Y, P2 |-c Z
  -------------------------- :: impL
  P1, X -o Y, I, P2 |-c Z

  I |-l A
  ---------- :: GR
  I |-c Gf A

defn
  G |-l A :: :: sse :: 'Sty_'
by

  ------- :: ax
  A |-l A

  D |-l A
  -------------- :: unitL1
  UnitT, D |-l A

  D |-l A
  -------------- :: unitL2
  UnitS, D |-l A
  
  ----------- :: unitR
  . |-l UnitS

  G, X, Y, D |-l A
  ---------------- :: beta
  G, Y, X, D |-l A

  I |-c X && G1, X, G2 |-l A
  -------------------------- :: cut1
  G1, I, G2 |-l A

  G |-l A && D1, A, D2 |-l B
  -------------------------- :: cut2
  D1, A, D2 |-l B

  G, X, Y, D |-l A
  ------------------- :: tenL1
  G, X (x) Y, D |-l A

  G, A, B, D |-l C
  ------------------- :: tenL2
  G, A (>) B, D |-l C

  G |-l A && D |-l B
  ------------------ :: tenR
  G, D |-l A (>) B

  I |-c X && G, Y, D |-l A
  ------------------------ :: impL
  G, X -o Y, I, D |-l A

  G |-l A && D, B |-l C
  --------------------- :: imprL
  D, A -> B, G |-l C

  G |-l A && B, D |-l C
  --------------------- :: implL
  G, B <- A, D |-l C

  G, A |-l B
  ------------ :: imprR
  G |-l A -> B

  A, G |-l B
  ------------ :: implR
  G |-l B <- A

  I |-c X
  --------- :: FR
  I |-l F X

  G, X, D |-l A
  --------------- :: FL
  G, F X, D |-l A

  G, A, D |-l B
  ---------------- :: GL
  G, Gf A, D |-l B










